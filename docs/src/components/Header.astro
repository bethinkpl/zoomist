---
import { t } from 'i18next'
import { Icon } from 'astro-icon'
import { Image } from 'astro:assets'
import { flatDocsRoutes } from '@routes'
// components
import Link from '@components/utils/Link.astro'
import SearchBtn from '@components/btns/SearchBtn.astro'
import LangBtn from '@components/btns/LangBtn.astro'
import MenuBtn from '@components/btns/MenuBtn.astro'
// image
import LogoDark from '@images/z-dark.svg'
import LogoLight from '@images/z-light.svg'

type NavLinks = Array<{
  name: string
  href: string
  target: '_self' | '_blank' | '_parent' | '_top' | null
}>

const navLinks: NavLinks = [
  { name: t('navLinks.documentation'), href: flatDocsRoutes[0]?.path!, target: null },
  {
    name: t('navLinks.demos'),
    href: 'https://codesandbox.io/p/sandbox/zoomist-demo-4pxlmz',
    target: '_blank'
  }
]
---

<header class="header">
  <nav class="nav px-lr">
    <div class="nav-wrap">
      <Link class="nav-logo" href="/" transition:persist>
        <Image src={LogoLight} class="dark:hidden" alt="logo light" />
        <Image src={LogoDark} class="hidden dark:block" alt="logo dark" />
      </Link>
      <div class="nav-links">
        {
          navLinks.map((item) => (
            <Link
              class="nav-link"
              href={item.href}
              target={item.target}
              outlink={item.target !== null}
            >
              {item.name}
            </Link>
          ))
        }
      </div>
      <div class="nav-tools" transition:persist>
        <SearchBtn />
        <span class="split-line"></span>
        <LangBtn />
        <span class="split-line"></span>
        <Link
          href="https://github.com/cotton123236/zoomist"
          target="_blank"
          class="nav-tool-link w-6"
        >
          <Icon name="mdi:github" />
        </Link>
        <MenuBtn />
      </div>
    </div>
  </nav>
  <!-- menu -->
  <div class="menu">
    <ul class="menu-wrap">
      {
        navLinks.map((item) => (
          <Link class="nav-link px-lr block py-2" href={item.href} target={item.target}>
            {item.name}
          </Link>
        ))
      }
    </ul>
  </div>
</header>

<style>
  .header {
    @apply sticky top-0 z-[999] w-full px-[var(--padding-lr)] pt-[var(--header-padding-top)];

    transition: 0.4s cubic-bezier(0.85, 0, 0.15, 1);
  }

  .nav {
    @apply relative z-20 mx-auto h-[var(--nav-height)] w-full max-w-[calc(var(--content-max-width)+var(--padding-lr)*2)] rounded-xl;

    background-color: rgba(var(--header-bg-color), 0.85);
    /* box-shadow: inset 0 -1px 0 0 var(--header-border-color); */
    box-shadow: 0 0 16px 8px var(--header-border-color);
    backdrop-filter: saturate(180%) blur(5px);
    transition: max-width 0.4s cubic-bezier(0.85, 0, 0.15, 1);
  }

  .nav-wrap {
    @apply mx-auto flex h-full w-full max-w-[var(--page-max-width)] items-center gap-10;
  }

  .nav-logo {
    height: 2.25rem;
    aspect-ratio: 1;
  }

  .nav-links {
    @apply hidden md:flex md:items-center md:gap-6;
  }

  .nav-link {
    @apply text-sm leading-8;
  }

  .nav-tools {
    @apply ml-auto flex items-center gap-4;
  }

  .nav-logo img {
    @apply h-full w-full object-contain object-center;
  }

  [astro-icon^='searcher'] {
    width: 1rem;
    height: 1rem;
  }

  .menu {
    @apply absolute left-0 top-[var(--header-height)] z-10 w-full -translate-y-full opacity-0 duration-500;

    box-shadow: inset 0 -1px 0 0 var(--header-border-color);
    background-color: rgba(var(--header-bg-color), 0.85);
    backdrop-filter: blur(5px);
  }

  .menu.is-active {
    @apply translate-y-0 opacity-100;
  }

  .menu-wrap {
    @apply mx-auto max-w-[var(--page-max-width)] py-4;
  }
</style>

<style is:global>
  .dark .nav {
    background-color: rgba(var(--header-bg-color-dark), 0.85);
    /* box-shadow: inset 0 -1px 0 0 var(--header-border-color-dark); */
    box-shadow: 0 0 16px 8px var(--header-border-color-dark);
  }

  .dark .menu {
    background-color: rgba(var(--header-bg-color-dark), 0.85);
    box-shadow: inset 0 -1px 0 0 var(--header-border-color-dark);
  }
</style>

<script>
  import { $menuState, $headerActive } from '@stores/globals'

  // const headerActiveClass: string = 'is-active'
  const menuActiveClass: string = 'is-active'

  // const setHeaderActive = (): void => {
  //   $headerActive.set(window.scrollY > 16)
  // }

  // const useHeader = (): void => {
  //   if (!window) return
  //   window.addEventListener('scroll', setHeaderActive)
  // }

  // const unmountHeader = (): void => {
  //   if (!window) return
  //   window.removeEventListener('scroll', setHeaderActive)
  // }

  const useMenu = (): void => {
    const menu = document.querySelector('header .menu')
    if (!menu) return

    $menuState.subscribe((val) => {
      menu.classList[val ? 'add' : 'remove'](menuActiveClass)
    })
  }

  const useCloseMenu = (): void => {
    const menu = document.querySelector('header .menu')
    if (!menu) return

    $menuState.set(false)
  }

  // $headerActive.subscribe((val) => {
  //   const header = document.querySelector('.header')
  //   header?.classList[val ? 'add' : 'remove'](headerActiveClass)
  // })

  // document.addEventListener('astro:page-load', useHeader)
  // document.addEventListener('astro:after-swap', unmountHeader)
  document.addEventListener('astro:page-load', useMenu)
  document.addEventListener('astro:after-swap', useCloseMenu)
</script>
