---
import Link from '@components/utils/Link.astro'

export interface Props {
  class?: string
  href?: string
  type?: 'solid' | 'stroke'
  target?: '_self' | '_blank' | '_parent' | '_top' | null
}

const { class: className, href, target, type = 'solid' } = Astro.props as Props

const classList = ['rect-btn', type, className]
---

{
  href ? (
    <Link href={href} class:list={classList} target={target} role="link" tabindex="0">
      <slot />
    </Link>
  ) : (
    <button type="button" role="button" class:list={classList}>
      <slot />
    </button>
  )
}

<style>
  .rect-btn {
    @apply inline-flex h-10 items-center justify-center whitespace-nowrap rounded border border-solid border-[var(--btn-border-color)] bg-[var(--btn-bg-color)] px-4 text-sm text-[var(--btn-text-color)] duration-200 hover:border-[var(--btn-border-color-hover)] hover:bg-[var(--btn-bg-color-hover)] hover:text-[var(--btn-text-color-hover)] md:text-base;
  }
</style>

<style is:global>
  .solid {
    --btn-border-color: #000;
    --btn-text-color: #fff;
    --btn-bg-color: #000;
    --btn-border-color-hover: #444;
    --btn-text-color-hover: #fff;
    --btn-bg-color-hover: #444;
  }

  .stroke {
    --btn-border-color: #ddd;
    --btn-text-color: #000;
    --btn-bg-color: transparent;
    --btn-border-color-hover: #ddd;
    --btn-text-color-hover: #777;
    --btn-bg-color-hover: transparent;
  }

  .dark .solid {
    --btn-border-color: #fff;
    --btn-text-color: #000;
    --btn-bg-color: #fff;
    --btn-border-color-hover: #ddd;
    --btn-text-color-hover: #000;
    --btn-bg-color-hover: #ddd;
  }

  .dark .stroke {
    --btn-border-color: #333;
    --btn-text-color: #fff;
    --btn-bg-color: transparent;
    --btn-border-color-hover: #333;
    --btn-text-color-hover: #ccc;
    --btn-bg-color-hover: transparent;
  }
</style>
