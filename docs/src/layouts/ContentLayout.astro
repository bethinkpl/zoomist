---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import BaseLayout from './BaseLayout.astro'
import SidebarBtn from '@components/docs/SidebarBtn.astro'
import SidebarLeft from '@components/docs/SidebarLeft.astro'
import SidebarRight from '@components/docs/SidebarRight.astro'
import Navigator from '@components/docs/Navigator.astro'

export interface Props {
  data: CollectionEntry<'docs'>['data']
  headings: MarkdownHeading[]
}

const { data, headings } = Astro.props as Props
const { title, description } = data
---

<BaseLayout {...{ title, description }}>
  <div class="sidebar-top px-lr md:hidden">
    <SidebarBtn class="px-lr" />
  </div>
  <div class="px-lr">
    <div class="container-content relative flex">
      <aside class="sidebar-left">
        <SidebarLeft
          class="sticky left-0 top-[calc(var(--header-height)+var(--sidebar-btn-height))] md:top-[calc(var(--header-height)+var(--content-padding-top))]"
        />
      </aside>
      <article class="main-content">
        <slot />
        <Navigator />
      </article>
      <aside class="sidebar-right">
        <SidebarRight
          headings={headings}
          class="lg:sticky lg:left-0 lg:top-[calc(var(--header-height)+var(--content-padding-top))]"
        />
      </aside>
    </div>
  </div>
</BaseLayout>

<style>
  :root {
    --sidebar-left-width: 100%;
    --sidebar-right-width: 100%;
    --content-padding-top: 1.5rem;

    @media screen and (min-width: 48rem) {
      --sidebar-left-width: 14rem;
      --sidebar-right-width: 14rem;
      --content-padding-top: 2rem;
    }
  }

  .sidebar-top {
    @apply sticky left-0 top-0 z-50 mt-[calc(var(--header-height)*-1)] pt-[var(--header-height)];

    background-color: var(--header-bg-color);
    backdrop-filter: saturate(180%) blur(5px);
  }

  .sidebar-btn {
    @apply w-full;
  }

  .sidebar-left {
    @apply absolute left-0 top-0 z-10 -mx-4 h-full w-[calc(100%+2rem)] shrink-0 -translate-x-full bg-[rgba(255,255,255,0.8)] opacity-0 backdrop-blur-lg dark:bg-[rgba(0,0,0,0.6)] md:relative md:m-0 md:h-auto md:w-[var(--sidebar-left-width)] md:transform-none md:bg-none md:pt-[var(--content-padding-top)] md:opacity-100;

    transition:
      transform 0.4s,
      opacity 0.4s;

    @media screen and (min-width: 48rem) {
      transition: 0s;
    }
  }

  .sidebar-left.is-active {
    @apply translate-x-0 opacity-100;
  }

  .sidebar-right {
    @apply left-0 top-[var(--header-height)] hidden shrink-0  pt-[var(--content-padding-top)]  lg:block;
  }

  .main-content {
    @apply box-border w-full pb-8 pt-[calc(var(--content-padding-top)+0.75rem)] md:w-[calc(100%-var(--sidebar-left-width))] md:px-4 md:pb-10 lg:w-[calc(100%-var(--sidebar-left-width)-var(--sidebar-right-width))] lg:px-8;
  }
</style>

<style is:global>
  html {
    --heading-border-color: #f4f4f4;

    --link-color: #1985ff;
    --link-color-hover: #68b5fb;
  }

  html.dark {
    --heading-border-color: #222;
  }

  article > p {
    @apply mt-4 text-sm leading-[1.75] text-gray-600 dark:text-gray-300 md:mt-5 md:text-base md:leading-[1.75];
  }

  article p a {
    @apply text-[var(--link-color)] duration-200 hover:text-[var(--link-color-hover)];
  }

  p code {
    @apply rounded border border-solid border-gray-50 px-1 py-[0.125rem] dark:border-gray-900;

    background-image: linear-gradient(160deg, #fbfbfb 60%, #eee);
  }

  .dark p code {
    background-image: linear-gradient(160deg, #141414 60%, #242424);
  }

  article hr {
    @apply my-8 border-[var(--heading-border-color)] md:my-12;

    border-top-width: 1px;
  }

  article ul {
    @apply my-4 ml-4 list-disc md:my-5;
  }

  article li {
    @apply mt-2 text-sm leading-[1.75] text-gray-600 dark:text-gray-300 md:text-base md:leading-[1.75];
  }

  article code {
    @apply font-code text-[13px];
  }

  article blockquote {
    @apply my-4 border-l-4 border-solid border-gray-100 p-3 text-[13px] dark:border-gray-800 md:my-5 md:text-sm;

    background-image: linear-gradient(160deg, #fbfbfb 60%, #eee);
  }

  .dark article blockquote {
    background-image: linear-gradient(160deg, #141414 60%, #242424);
  }

  .level-h1 {
    @apply mb-6 text-3xl font-medium md:mb-8 md:text-4xl;
  }

  .level-h2 {
    @apply mb-4 mt-8 pt-6 text-xl font-medium md:mb-6 md:mt-10 md:pt-8 md:text-2xl;

    border-top: 1px solid var(--heading-border-color);
  }

  .level-h3 {
    @apply mb-3 mt-6 font-medium md:mb-4 md:mt-8 md:text-lg;
  }

  .heading-wrapper {
    @apply flex items-center;
  }

  .heading-wrapper:hover .anchor-link {
    @apply opacity-100;
  }

  .hilight {
    @apply font-medium text-black dark:text-white;
  }

  .text {
    @apply leading-[1.75] text-gray-600 dark:text-gray-300;
  }

  .anchor-link {
    @apply ml-2 opacity-0 duration-200;
  }

  .anchor-icon {
    @apply block h-4 w-4 md:h-5 md:w-5;
  }

  .anchor-icon svg {
    @apply h-full w-full;
  }

  .expressive-code {
    --code-font-size: 0.8125rem;
    --code-font-family: 'Roboto Mono', 'monospace';
    --code-ui-font-size: 0.875rem;
    --code-tab-bar-padding: 0.5rem;
    --code-border-radius: 0.375rem;

    --code-border-color: #f4f4f4;
    --code-shadow-color: #fbfbfb;
    /* --code-tab-bar-color: #fafafa; */
    --code-tab-title-color: #777;

    @apply my-4 rounded-[var(--code-border-radius)];

    background-image: linear-gradient(160deg, #fbfbfb 60%, #eee);
  }

  .dark .expressive-code {
    --code-border-color: #191919;
    --code-shadow-color: #111;
    /* --code-tab-bar-color: #121212; */
    --code-tab-title-color: #999;

    background-image: linear-gradient(160deg, #141414 60%, #242424);
  }

  .expressive-code .frame.has-title:not(.is-terminal) .header {
    border-bottom: 1px solid var(--code-border-color);
  }

  .expressive-code.ec-theme-vitesse-dark .frame .copy button {
    width: 1.75rem;
    height: 1.75rem;

    @media (hover: hover) {
      width: 1.75rem;
      height: 1.75rem;
    }
  }

  .expressive-code.ec-theme-vitesse-dark .frame .copy button::before {
    border: none;
  }

  .expressive-code.ec-theme-vitesse-dark .frame .copy button::after {
    margin: 0.375rem;
  }
</style>

<script>
  import { $sidebarState } from '@stores/globals'

  const useSidebarLeftControll = (): void => {
    const sidebarLeft = document.querySelector('.sidebar-left')
    if (!sidebarLeft) return

    $sidebarState.subscribe((val) => {
      sidebarLeft.classList[val ? 'add' : 'remove']('is-active')
      document.body.classList[val ? 'add' : 'remove']('is-locked')
    })
  }

  const useCloseSidebarLeft = (): void => {
    $sidebarState.set(false)
  }

  document.addEventListener('astro:page-load', useSidebarLeftControll)
  document.addEventListener('astro:after-swap', useCloseSidebarLeft)
</script>
